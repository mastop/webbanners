<?php

namespace Banner\OrderBundle\Document;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Banner\UserBundle\Document\User;

/**
 * OrderRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrderRepository extends DocumentRepository
{
    public function findByUser(User $user){
        return $this->createQueryBuilder()
                ->field('user')->references($user)
                ->sort('expires', 'ASC')
                ->getQuery()
                ->execute();
    }
    public function findByOpenUser(User $user){
        return $this->createQueryBuilder()
                ->field('user')->references($user)
                ->field('aproved')->notEqual("true")
                ->sort('expires', 'ASC')
                ->getQuery()
                ->execute();
    }
    public function findByDoneUser(User $user){
        return $this->createQueryBuilder()
                ->field('user')->references($user)
                ->field('aproved')->equals("true")
                ->sort('expires', 'ASC')
                ->getQuery()
                ->execute();
    }
    public function findByDesignerUser(User $designer, User $user){
        return $this->createQueryBuilder()
                ->field('designer')->references($designer)
                ->field('user')->references($user)
                ->sort('expires', 'ASC')
                ->getQuery()
                ->execute();
    }
    public function findOneByName($name){
        return $this->findOneBy(array('name'=>$name));
    }
    public function findByNameUser($name, User $user){
        return $this->createQueryBuilder()
                ->field('name')->equals($name)
                ->field('user')->references($user)
                ->sort('expires', 'ASC')
                ->getQuery()
                ->getSingleResult();
    }
    public function findUserByDesigner(User $designer){
        return $this->createQueryBuilder()
                ->field('designer')->references($designer)
                ->getQuery()
                ->execute();
    }
    public function findUnsets(){
        return $this->createQueryBuilder()
                ->field('designer')->equals(null)
                ->sort('expires', 'ASC')
                ->getQuery()
                ->execute();
    }
}